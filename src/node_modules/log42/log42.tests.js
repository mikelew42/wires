var logger = require("log42");
var log = logger() || logger(false);

var log = logger({
	Method: {}, // auto extend default Method sub class
	methods: {
		methodName: {
			// auto extend, or extend default Method
		}
	}
});

var Logger = logger.Logger; // access to the actual Logger class.


var my_function = function(){
	var log = logger() || logger(false);
};

// attached to a module:

var Mod = Module.extend({
	some_method: function(){
		this.log(this) && this.log(that);
		this.log.on() && this.log.off();
		this.log.host === this;
		this.log.methods.methodName = false;
		this.log.methods.methodName = this.log.Method.extend();
		this.log.set({
			methods: {
				methodName: {
					// auto extend
				}
			}
		});

		// this is cleaner:
		this.log.methods.set({ // special "set"
			methodName: {
				// auto extend, even if nothing is there...
			}
		});


	}
});