var Mod5 = require("./Mod5");
var is = require("is");
var ExtendMfn = require("./ExtendMfn");
var SetMfn = require("./SetMfn");

var Mod55 = Mod5.extend({
	name: "Mod55",
	settings: Mod5.Settings()
});

// Upgrade .set to use .set, so that we can auto-extend .set.Classes
Mod55.prototype.set.mfn.constructor.extend = ExtendMfn.make();
Mod55.prototype.set.mfn.constructor.prototype.set = SetMfn.make(); 

var Mod6 = Mod55.extend({
	name: "Mod6",
	set: {
		wrapMethod: function(mod, name, fn){
			mod[name] = new this.Method({
				name: name,
				method: fn
			}, mod.settings && 
			   mod.settings.methods && 
			   mod.settings.methods[name] &&
			   mod.settings.methods[name].data &&
			   mod.settings.methods[name].data() ).wrapper();
		},
		wrapProperty: function(mod, name, value){
			new this.Property({
				name: name,
				parent: mod,
				value: value
			}, mod.settings && 
			   mod.settings.props &&
			   mod.settings.props[name] &&
			   mod.settings.props[name].data &&
			   mod.settings.props[name].data() );
		},
		Method: {},
		Property: {}
	}
});

module.exports = Mod6;