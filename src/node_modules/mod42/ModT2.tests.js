console.groupCollapsed("pretest");
var TestFramework = require("test/framework");
var test = TestFramework.test;
var is = require("is");
var $ = require("jquery");
var assert = console.assert.bind(console);

var Mod7 = require("mod42/Mod7");

console.groupEnd();

$(function(){

test("Mod7", function(){
	test("extend", function(){
		var Mod8 = Mod7.extend({
			test: 123,
			myFn: function(){
				console.log("fuckin camel case");
			}
		});

		var mod = Mod8({
			another: "prop"
		});

		mod.myFn();
	});

	test("pojos", function(){
		var Mod8 = Mod7.extend({
			test: {
				one: {
					one1: 1,
					one2: true,
					one3: "three"
				},
				two: {
					two1: 4,
					two2: false,
					two3: "six",
					two4: {
						seven: 8
					}
				} 
			}
		});

		var Mod9 = Mod8.extend({
			test: {
				two: {
					two3: "nein"
				}
			}
		});

		assert(Mod9.prototype.test !== Mod8.prototype.test);
		assert(Mod8.prototype.test.one);
		assert(Mod9.prototype.test.one);
		assert(Mod9.prototype.test.one === Mod8.prototype.test.one);
		assert(Mod9.prototype.test.two !== Mod8.prototype.test.two);
		assert(Mod9.prototype.test.one.one1 === 1);
		assert(Mod9.prototype.test.two.two2 === false);
		assert(Mod9.prototype.test.two.two3 === "nein");

	})
});

});

// test pojos
// use Property to add itself to parent.set({ _props: {}[this.name] = this })

